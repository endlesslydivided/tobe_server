import { ApiProperty } from "@nestjs/swagger";
import { BelongsTo, BelongsToMany, Column, DataType, Default, ForeignKey, Model, Table } from "sequelize-typescript";
import { User } from "src/user/user.model";


interface BotMessageCreationAttribute {
  userId: string;
  text: string;
  isTalkingSession: boolean;
  isNeuralGenerated: boolean;
}

@Table({ tableName: "botMessage", createdAt:true,updatedAt:true,paranoid:true})
export class BotMessage extends Model<BotMessage,BotMessageCreationAttribute> {

  @ApiProperty({ example: "123e4567-e89b-12d3-a456-426614174001", description: "Unique bot message identifier" })
  @Default(DataType.UUIDV4)
  @Column({ type: DataType.UUID, allowNull:false, primaryKey: true })
  id: string;

  @ApiProperty({ example: "123e4567-e89b-12d3-a456-426614174000", description: "User which created an entry" })
  @ForeignKey(() => User)
  @Column({ type: DataType.UUID, allowNull: true  })
  userId: string;

  @ApiProperty({ example: "Feel kinda depressed today...", description: "Message content" })
  @Column({ type: DataType.TEXT, allowNull: true })
  text: string;

  @ApiProperty({ example: "true", description: "Is an entry used to store discussion session data" })
  @Column({ type: DataType.BOOLEAN, allowNull: true })
  isTalkingSession: boolean;

  @ApiProperty({ example: "true", description: "Is message generated by a neural net?" })
  @Column({ type: DataType.BOOLEAN, allowNull: true })
  isNeuralGenerated: boolean;

  @BelongsTo(() => User,"userId")
  user: User


}